/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_french.h"

// Layer definitions
#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
	};

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
		a_circ: a_circ {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N6>
    		, <&macro_release &kp LALT>
    		;
		};
		a_trem: a_trem {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8>
    		, <&macro_release &kp LALT>
    		;
		};
		e_circ: e_circ {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N4>
    		, <&macro_release &kp LALT>
    		;
		};
		e_trem: e_trem {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N5>
    		, <&macro_release &kp LALT>
    		;
		};
		u_circ: u_circ {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N1>
    		, <&macro_release &kp LALT>
    		;
		};
		u_trem: u_trem {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N2>
    		, <&macro_release &kp LALT>
    		;
		};
		i_circ: i_circ {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N8>
    		, <&macro_release &kp LALT>
    		;
		};
		i_trem: i_trem {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N9>
    		, <&macro_release &kp LALT>
    		;
		};
		o_circ: o_circ {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N4>
    		, <&macro_release &kp LALT>
    		;
		};
		o_trem: o_trem {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N6>
    		, <&macro_release &kp LALT>
    		;
		};

		/*
		a_M_grav: a_M_grav {
			compatible = "zmk,behavior-macro"; 
			#binding-cells = <0>;
			wait-ms = <40>;
			tap-ms = <40>;
			bindings
    		= <&macro_press   &kp LALT>
    		, <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N2>
    		, <&macro_release &kp LALT>
    		;
		};
		*/
	};

	combos {
		compatible = "zmk,combos";
		// both right thumb keys
		combo_accent {
			timeout-ms = <200>;
			key-positions = <32 33>;
			bindings = <&mo ACCENT>;
		};
		// internal-left & external-right thumb keys
		combo_sym2 {
			timeout-ms = <200>;
			key-positions = <31 33>;
			bindings = <&mo SYM2>;
		};
		// both left thumb keys
		combo_settings {
			timeout-ms = <200>;
			key-positions = <30 31>;
			bindings = <&mo SETTINGS>;
		};
		// left index & middle fingers (home-row)
		// hold control & space for Adobe workflow
		combo_ctrl_space {
			timeout-ms = <200>;
			key-positions = <12 13>;
			bindings = <&kp LC(SPACE)>;
			layers = <BASE>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp FR_A &kp FR_Z &kp FR_E &kp FR_R &kp FR_T           &kp FR_Y &kp FR_U  &kp FR_I     &kp FR_O   &kp FR_P 
			&kp FR_Q &kp FR_S &kp FR_D &kp FR_F &kp FR_G           &kp FR_H &kp FR_J  &kp FR_K     &kp FR_L   &kp FR_M
			&kp FR_W &kp FR_X &kp FR_C &kp FR_V &kp FR_B           &kp FR_N &kp FR_COMM  &kp FR_DOT  &kp FR_QUOT    &kp FR_COLN
							           &mo EXT  &qt LSHIFT SPACE   &kp SPACE &sl SYM
			>;
		};

		// Numbers and high frequency symbols
		sym_layer {
			label = "Sym.";
			bindings = <
			&kp FR_1 &kp FR_2 &kp FR_3 &kp FR_4 &kp FR_5  					&kp FR_6 &kp FR_7 &kp FR_8 &kp FR_9 &kp FR_0
			&kp FR_PERC &kp FR_HASH &kp FR_EURO &kp FR_UNDS &kp FR_LPRN  	&kp FR_QUES &kp FR_AT &kp FR_PLUS &kp FR_ASTR &kp FR_DQUO
			&kp FR_BSLS &kp FR_AMPR &kp FR_DLR &kp FR_PIPE &kp FR_RPRN 		&kp FR_EXLM &kp FR_EQL &kp FR_MINS &kp FR_SLSH &kp FR_SCLN
													&mo FNC  &mo SYM2   	&trans &trans
			>;
		};

		// Main modifiers and arrow keys
		ext_layer {
			label = "Mods";
			bindings = <
			&kp ESC  &none 	&none &none &none    						&kp PG_UP  &kp HOME &kp UP &kp END &kp CAPS
			&sk LALT &sk LGUI  &sk LSHIFT  &sk LCTRL  &sk RALT 			&kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT   &kp DEL
			&kp LC(FR_Z)  &kp LC(X) &kp LC(C) &kp TAB   &kp LC(V)       &kp LC(BSPC) &kp BSPC &none &none &none
													&trans &kp LCTRL    &kp ENTER  &mo FNC 
			>;
		};

		// Function keys with modifiers
		fnc_layer {
			label = "FRow";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  		&kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
			&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &sk RALT     		&kp F11 &kp F12  &none &kp LC(HOME) &kp LC(PG_DN)
			&kp PRINTSCREEN &none &kp C_PREV &kp C_PP  &kp C_NEXT		&kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &none &kp LC(PG_UP)
							  							&none &none     &none &none  
			>;
		};

		// Low frequency symbols.
		symbols_2_layer {
			label = "Sym.2";
			bindings = <
			&kp FR_CIRC &kp FR_PND &kp FR_LCBR &kp FR_LABK &kp FR_LBRC         &none &none &none &none &none 
			&kp FR_GRV &kp FR_TILD &kp FR_RCBR &kp FR_RABK &kp FR_RBRC         &none &none &none &none &none
			&none &none &none &none &none				  					   &none &none &none &none &none
															&none &none        &none &none 
			>;
		};

		// Used to type regional accents.
		accent_layer {
			label = "Accent";
			bindings = <
			&kp FR_AGRV &e_circ &kp FR_EACU &e_trem &none               &none  &kp FR_UGRV &i_circ &o_circ &none 
			&a_circ &none &kp FR_EGRV &none &none 						&none &u_circ &i_trem &o_trem &none
			&a_trem &none &kp FR_CCED &none &none                   	&none &u_trem &none &none &none
									&none &none                         &none &none 
			>;
		};

		// Used to change the keyboard's settings.
		settings_layer {
				label = "Sett.";
				bindings = <
				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
				&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
				&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
										&none &none                         &none &none 
				>;
		};
	};
};

